// <auto-generated />
using System;
using AccountsManager_Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AccountsManager_Data.Migrations
{
    [DbContext(typeof(AccountManagerContext))]
    [Migration("20191223163859_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AccountsManager_Domain.Absence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Absences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Sickness",
                            EmployeeId = 1,
                            EndDateTime = new DateTime(2019, 12, 24, 16, 38, 58, 759, DateTimeKind.Local).AddTicks(9266),
                            Notes = "Sickness",
                            Paid = true,
                            StartDateTime = new DateTime(2019, 12, 22, 16, 38, 58, 759, DateTimeKind.Local).AddTicks(8769)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Sickness",
                            EmployeeId = 2,
                            EndDateTime = new DateTime(2019, 12, 24, 16, 38, 58, 759, DateTimeKind.Local).AddTicks(9804),
                            Notes = "Sickness",
                            Paid = true,
                            StartDateTime = new DateTime(2019, 12, 22, 16, 38, 58, 759, DateTimeKind.Local).AddTicks(9782)
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanySMSSender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewCustomerCRMWebhook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfUserLicences")
                        .HasColumnType("int");

                    b.Property<DateTime>("RenewalDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1987,
                            CompanyEmail = "rag.dhiman@NehaKD.com",
                            CompanyName = "NehaKD",
                            CompanySMSSender = "0712345678",
                            NewCustomerCRMWebhook = "https://nehacrm.api.com/customer",
                            NoOfUserLicences = 10,
                            RenewalDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityTown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityTown = "West Bromwich",
                            Country = "England",
                            County = "West Midlands",
                            CustomerId = 1123,
                            PostCode = "B32423",
                            Street = "29 Losonway"
                        },
                        new
                        {
                            Id = 2,
                            CityTown = "Sandwell",
                            Country = "England",
                            County = "West Midlands",
                            CustomerId = 2123,
                            PostCode = "B32445",
                            Street = "7 Park Hill Road"
                        },
                        new
                        {
                            Id = 3,
                            CityTown = "Smethwick",
                            Country = "England",
                            County = "West Midlands",
                            CustomerId = 3123,
                            PostCode = "B32434",
                            Street = "133 Florence Road"
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Attachments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FilePath = "//supplier/234/agreement.txt",
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 2,
                            FilePath = "//supplier/234/agreement.txt",
                            SupplierId = 2
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("SortCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BankAccounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountNo = "234-2432-324",
                            CustomerId = 1123,
                            SortCode = "34-234-234"
                        },
                        new
                        {
                            Id = 2,
                            AccountNo = "234-212-676",
                            CustomerId = 2123,
                            SortCode = "567-345-234"
                        },
                        new
                        {
                            Id = 3,
                            AccountNo = "546-456-345",
                            CustomerId = 3123,
                            SortCode = "435-456-123"
                        },
                        new
                        {
                            Id = 4,
                            AccountNo = "546-456-345",
                            CustomerId = 4345,
                            SortCode = "435-456-123"
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.Credit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CreditAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasCreditAgreement")
                        .HasColumnType("bit");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("ProductCredit")
                        .HasColumnType("int");

                    b.Property<string>("SortCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Credits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountNo = "234-2432-324",
                            CreditAmount = 231.0,
                            CreditDate = new DateTime(2020, 4, 21, 16, 38, 58, 757, DateTimeKind.Local).AddTicks(9660),
                            CustomerName = "Mr Michael Raikkonin Verstaphen",
                            HasCreditAgreement = true,
                            InvoiceId = 11232,
                            ProductCredit = 2,
                            SortCode = "34-234-234"
                        },
                        new
                        {
                            Id = 2,
                            AccountNo = "234-212-676",
                            CreditAmount = 231.0,
                            CreditDate = new DateTime(2020, 4, 21, 16, 38, 58, 758, DateTimeKind.Local).AddTicks(1986),
                            CustomerName = "Mr Timi Schumacher Alfonso",
                            HasCreditAgreement = true,
                            InvoiceId = 21324,
                            ProductCredit = 1,
                            SortCode = "567-345-234"
                        },
                        new
                        {
                            Id = 3,
                            AccountNo = "546-456-345",
                            CreditAmount = 231.0,
                            CreditDate = new DateTime(2020, 4, 21, 16, 38, 58, 758, DateTimeKind.Local).AddTicks(2033),
                            CustomerName = "Mr Lewis Rosbert Sutton",
                            HasCreditAgreement = true,
                            InvoiceId = 32312,
                            ProductCredit = 4,
                            SortCode = "435-456-123"
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.CreditNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreditNoteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CreditNotes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreditNoteDate = new DateTime(2019, 12, 21, 16, 50, 58, 746, DateTimeKind.Local).AddTicks(6342),
                            CustomerId = 1123,
                            InvoiceId = 11232,
                            Message = "Credit Note"
                        },
                        new
                        {
                            Id = 2,
                            CreditNoteDate = new DateTime(2019, 12, 19, 18, 41, 58, 748, DateTimeKind.Local).AddTicks(9326),
                            CustomerId = 1123,
                            InvoiceId = 11232,
                            Message = "Credit Note"
                        },
                        new
                        {
                            Id = 3,
                            CreditNoteDate = new DateTime(2019, 12, 27, 6, 22, 58, 748, DateTimeKind.Local).AddTicks(9368),
                            CustomerId = 1123,
                            InvoiceId = 11232,
                            Message = "Credit Note"
                        },
                        new
                        {
                            Id = 4,
                            CreditNoteDate = new DateTime(2019, 12, 18, 16, 39, 58, 748, DateTimeKind.Local).AddTicks(9375),
                            CustomerId = 1123,
                            InvoiceId = 11232,
                            Message = "Credit Note"
                        },
                        new
                        {
                            Id = 5,
                            CreditNoteDate = new DateTime(2019, 12, 20, 17, 22, 58, 748, DateTimeKind.Local).AddTicks(9378),
                            CustomerId = 1123,
                            InvoiceId = 21324,
                            Message = "Credit Note"
                        },
                        new
                        {
                            Id = 6,
                            CreditNoteDate = new DateTime(2019, 12, 20, 17, 22, 58, 748, DateTimeKind.Local).AddTicks(9382),
                            CustomerId = 1123,
                            InvoiceId = 21324,
                            Message = "Credit Note"
                        },
                        new
                        {
                            Id = 7,
                            CreditNoteDate = new DateTime(2019, 12, 20, 17, 22, 58, 748, DateTimeKind.Local).AddTicks(9386),
                            CustomerId = 1123,
                            InvoiceId = 21324,
                            Message = "Credit Note"
                        },
                        new
                        {
                            Id = 8,
                            CreditNoteDate = new DateTime(2019, 12, 20, 17, 22, 58, 748, DateTimeKind.Local).AddTicks(9389),
                            CustomerId = 1123,
                            InvoiceId = 21324,
                            Message = "Credit Note"
                        },
                        new
                        {
                            Id = 9,
                            CreditNoteDate = new DateTime(2019, 12, 20, 17, 22, 58, 748, DateTimeKind.Local).AddTicks(9393),
                            CustomerId = 1123,
                            InvoiceId = 21324,
                            Message = "Credit Note"
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.CreditNoteLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreditNoteId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("Service")
                        .HasColumnType("int");

                    b.Property<double>("VAT")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CreditNoteLines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreditNoteId = 1,
                            Quantity = 2.0,
                            Rate = 2.3999999999999999,
                            Service = 1,
                            VAT = 23.0
                        },
                        new
                        {
                            Id = 2,
                            CreditNoteId = 2,
                            Quantity = 2.0,
                            Rate = 2.3999999999999999,
                            Service = 1,
                            VAT = 23.0
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CreditAgreement")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayNameAs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1123,
                            AccountId = 1987,
                            Company = "MR-Verstaphen Ltd",
                            CreditAgreement = true,
                            DisplayNameAs = "Michael",
                            Email = "Michael.Raikkonin@gmail.com",
                            Fax = "NA",
                            FirstName = "Michael",
                            LastName = "Raikkonin",
                            MiddleName = "Verstaphen",
                            Mobile = "07123456789",
                            Phone = "0123456789",
                            Suffix = "MCP",
                            Title = "Mr",
                            Website = "http://www.MR-Verstaphen.com"
                        },
                        new
                        {
                            Id = 2123,
                            AccountId = 1987,
                            Company = "Timi-Alfonso Ltd",
                            CreditAgreement = true,
                            DisplayNameAs = "Timi",
                            Email = "Timi.Schoomacher@Timi-Alonso.com",
                            Fax = "NA",
                            FirstName = "Timi",
                            LastName = "Schoomacher",
                            MiddleName = "Alfonso",
                            Mobile = "07223456789",
                            Phone = "0223456789",
                            Suffix = "BTEC",
                            Title = "Mr",
                            Website = "http://www.Timi-Alfonso.com"
                        },
                        new
                        {
                            Id = 3123,
                            AccountId = 1987,
                            Company = "Sutton-Rosbert Ltd",
                            CreditAgreement = true,
                            Email = "Lewis.Button@Lewis-Rosbert-Button.com",
                            Fax = "NA",
                            FirstName = "Lewis",
                            LastName = "Sutton",
                            MiddleName = "Rosbert",
                            Mobile = "07223456789",
                            Phone = "0223456789",
                            Title = "Mr",
                            Website = "http://www.Lewis-Rosbert-Sutton.com"
                        },
                        new
                        {
                            Id = 4345,
                            AccountId = 1987,
                            Company = "Hamilton-Singh Ltd",
                            CreditAgreement = true,
                            Email = "Jenson.Hamilton@JensonSinghHam.com",
                            Fax = "NA",
                            FirstName = "Jenson",
                            LastName = "Hamilton",
                            MiddleName = "Singh",
                            Mobile = "07223456789",
                            Phone = "0223456789",
                            Title = "Mr",
                            Website = "www.JensonSinghHam.com"
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.DelayedCharge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DelayedChargeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DelayedCharges");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1123,
                            DelayedChargeDate = new DateTime(2020, 1, 13, 16, 38, 58, 750, DateTimeKind.Local).AddTicks(1388),
                            InvoiceId = 32312,
                            Message = "Delayed charge"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2123,
                            DelayedChargeDate = new DateTime(2020, 1, 13, 16, 38, 58, 750, DateTimeKind.Local).AddTicks(2389),
                            InvoiceId = 32312,
                            Message = "Delayed charge"
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 2123,
                            DelayedChargeDate = new DateTime(2019, 12, 24, 16, 38, 58, 750, DateTimeKind.Local).AddTicks(2421),
                            InvoiceId = 32312,
                            Message = "Delayed charge"
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 3123,
                            DelayedChargeDate = new DateTime(2020, 7, 21, 16, 38, 58, 750, DateTimeKind.Local).AddTicks(2426),
                            InvoiceId = 21324,
                            Message = "Delayed charge"
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 3123,
                            DelayedChargeDate = new DateTime(2019, 12, 25, 16, 38, 58, 750, DateTimeKind.Local).AddTicks(2430),
                            InvoiceId = 21324,
                            Message = "Delayed charge"
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 3123,
                            DelayedChargeDate = new DateTime(2020, 1, 10, 16, 38, 58, 750, DateTimeKind.Local).AddTicks(2433),
                            InvoiceId = 21324,
                            Message = "Delayed charge"
                        },
                        new
                        {
                            Id = 7,
                            CustomerId = 3123,
                            DelayedChargeDate = new DateTime(2020, 7, 21, 16, 38, 58, 750, DateTimeKind.Local).AddTicks(2437),
                            InvoiceId = 32312,
                            Message = "Delayed charge"
                        },
                        new
                        {
                            Id = 8,
                            CustomerId = 3123,
                            DelayedChargeDate = new DateTime(2019, 12, 25, 16, 38, 58, 750, DateTimeKind.Local).AddTicks(2441),
                            InvoiceId = 32312,
                            Message = "Delayed charge"
                        },
                        new
                        {
                            Id = 9,
                            CustomerId = 3123,
                            DelayedChargeDate = new DateTime(2020, 1, 10, 16, 38, 58, 750, DateTimeKind.Local).AddTicks(2444),
                            InvoiceId = 32312,
                            Message = "Delayed charge"
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.DelayedChargeLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DelayedChargeId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("Service")
                        .HasColumnType("int");

                    b.Property<double>("VAT")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("DelayedChargeLines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DelayedChargeId = 1,
                            Quantity = 21.0,
                            Rate = 23.0,
                            Service = 1,
                            VAT = 17.5
                        },
                        new
                        {
                            Id = 2,
                            DelayedChargeId = 2,
                            Quantity = 21.0,
                            Rate = 23.0,
                            Service = 1,
                            VAT = 17.5
                        },
                        new
                        {
                            Id = 3,
                            DelayedChargeId = 3,
                            Quantity = 21.0,
                            Rate = 23.0,
                            Service = 1,
                            VAT = 17.5
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeliveredDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SendTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeliveredDateTime = new DateTime(2019, 12, 23, 17, 8, 58, 766, DateTimeKind.Local).AddTicks(386),
                            Message = "Invoice sent!",
                            SendTo = "2342352354324",
                            Sender = "Bob Smith",
                            SentDateTime = new DateTime(2019, 12, 23, 16, 38, 58, 765, DateTimeKind.Local).AddTicks(9882),
                            Subject = "Invoice Sent!"
                        },
                        new
                        {
                            Id = 2,
                            DeliveredDateTime = new DateTime(2019, 12, 23, 17, 8, 58, 766, DateTimeKind.Local).AddTicks(1769),
                            Message = "Invoice sent!",
                            SendTo = "2342352354324",
                            Sender = "Bob Smith",
                            SentDateTime = new DateTime(2019, 12, 23, 16, 38, 58, 766, DateTimeKind.Local).AddTicks(1749),
                            Subject = "Invoice Sent!"
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayNameAs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1987,
                            Address = "23 Parkhill Road Smethwick B66 53N",
                            DOB = new DateTime(1975, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayNameAs = "EddieD",
                            Email = "eddie.dennies@AllFinances298.com",
                            FirstName = "Freddie",
                            LastName = "Dennies",
                            Mobile = "072341123441",
                            Notes = "Paternity due soon!",
                            Phone = "0121324435",
                            Title = "Mr"
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 1987,
                            Address = "23 Windmill Road Smethwick B66 34R",
                            DOB = new DateTime(1975, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayNameAs = "EddieD",
                            Email = "ron.jordan@AllFinances298.com",
                            FirstName = "Jon",
                            LastName = "Jordan",
                            Mobile = "072341123441",
                            Notes = "Paternity due soon!",
                            Phone = "0121324435",
                            Title = "Mr"
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpectedReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LoanEndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LoanStartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 1,
                            ExpectedReturnDate = new DateTime(2020, 7, 10, 16, 38, 58, 762, DateTimeKind.Local).AddTicks(1259),
                            LoanEndDateTime = new DateTime(2020, 1, 12, 16, 38, 58, 762, DateTimeKind.Local).AddTicks(2253),
                            LoanStartDateTime = new DateTime(2019, 12, 23, 16, 38, 58, 762, DateTimeKind.Local).AddTicks(1770),
                            Name = "De 23l Laptop",
                            Reference = "D32432"
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 2,
                            ExpectedReturnDate = new DateTime(2020, 7, 10, 16, 38, 58, 762, DateTimeKind.Local).AddTicks(3641),
                            LoanEndDateTime = new DateTime(2020, 1, 12, 16, 38, 58, 762, DateTimeKind.Local).AddTicks(3673),
                            LoanStartDateTime = new DateTime(2019, 12, 23, 16, 38, 58, 762, DateTimeKind.Local).AddTicks(3662),
                            Name = "De 23l Laptop",
                            Reference = "D32432"
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.Estimate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EstimateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estimates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1123,
                            EstimateDate = new DateTime(2019, 12, 24, 16, 38, 58, 751, DateTimeKind.Local).AddTicks(5644),
                            ExpirationDate = new DateTime(2020, 1, 13, 16, 38, 58, 751, DateTimeKind.Local).AddTicks(6150),
                            InvoiceId = 11232,
                            Message = "20% Discount included!"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2123,
                            EstimateDate = new DateTime(2019, 12, 24, 16, 38, 58, 751, DateTimeKind.Local).AddTicks(7119),
                            ExpirationDate = new DateTime(2020, 1, 13, 16, 38, 58, 751, DateTimeKind.Local).AddTicks(7140),
                            InvoiceId = 11232,
                            Message = "20% Discount included!"
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3123,
                            EstimateDate = new DateTime(2019, 12, 24, 16, 38, 58, 751, DateTimeKind.Local).AddTicks(7158),
                            ExpirationDate = new DateTime(2020, 1, 13, 16, 38, 58, 751, DateTimeKind.Local).AddTicks(7162),
                            InvoiceId = 21324,
                            Message = "20% Discount included!"
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 1123,
                            EstimateDate = new DateTime(2019, 12, 24, 16, 38, 58, 751, DateTimeKind.Local).AddTicks(7166),
                            ExpirationDate = new DateTime(2020, 1, 13, 16, 38, 58, 751, DateTimeKind.Local).AddTicks(7169),
                            InvoiceId = 21324,
                            Message = "20% Discount included!"
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 2123,
                            EstimateDate = new DateTime(2019, 12, 24, 16, 38, 58, 751, DateTimeKind.Local).AddTicks(7173),
                            ExpirationDate = new DateTime(2020, 1, 13, 16, 38, 58, 751, DateTimeKind.Local).AddTicks(7175),
                            InvoiceId = 21324,
                            Message = "20% Discount included!"
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 3123,
                            EstimateDate = new DateTime(2019, 12, 24, 16, 38, 58, 751, DateTimeKind.Local).AddTicks(7179),
                            ExpirationDate = new DateTime(2020, 1, 13, 16, 38, 58, 751, DateTimeKind.Local).AddTicks(7182),
                            InvoiceId = 11232,
                            Message = "20% Discount included!"
                        },
                        new
                        {
                            Id = 7,
                            CustomerId = 1123,
                            EstimateDate = new DateTime(2019, 12, 24, 16, 38, 58, 751, DateTimeKind.Local).AddTicks(7186),
                            ExpirationDate = new DateTime(2020, 1, 13, 16, 38, 58, 751, DateTimeKind.Local).AddTicks(7188),
                            InvoiceId = 32312,
                            Message = "20% Discount included!"
                        },
                        new
                        {
                            Id = 8,
                            CustomerId = 2123,
                            EstimateDate = new DateTime(2019, 12, 24, 16, 38, 58, 751, DateTimeKind.Local).AddTicks(7192),
                            ExpirationDate = new DateTime(2020, 1, 13, 16, 38, 58, 751, DateTimeKind.Local).AddTicks(7195),
                            InvoiceId = 32312,
                            Message = "20% Discount included!"
                        },
                        new
                        {
                            Id = 9,
                            CustomerId = 3123,
                            EstimateDate = new DateTime(2019, 12, 24, 16, 38, 58, 751, DateTimeKind.Local).AddTicks(7198),
                            ExpirationDate = new DateTime(2020, 1, 13, 16, 38, 58, 751, DateTimeKind.Local).AddTicks(7201),
                            InvoiceId = 32312,
                            Message = "20% Discount included!"
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.EstimateLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EstimateId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("Service")
                        .HasColumnType("int");

                    b.Property<double>("VAT")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("EstimateLines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EstimateId = 1,
                            Quantity = 12.0,
                            Rate = 133.0,
                            Service = 1,
                            VAT = 17.5
                        },
                        new
                        {
                            Id = 2,
                            EstimateId = 2,
                            Quantity = 12.0,
                            Rate = 133.0,
                            Service = 1,
                            VAT = 17.5
                        },
                        new
                        {
                            Id = 3,
                            EstimateId = 3,
                            Quantity = 12.0,
                            Rate = 133.0,
                            Service = 1,
                            VAT = 17.5
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Expenses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BankAccountId = 1987,
                            CustomerId = 0,
                            EmployeeId = 1,
                            Notes = "One-off",
                            PayeeName = "Art Tech",
                            PaymentDate = new DateTime(2019, 12, 21, 16, 38, 58, 762, DateTimeKind.Local).AddTicks(8608),
                            PaymentMethod = 1,
                            Reference = "TESDSFD-324",
                            SupplierId = 0
                        },
                        new
                        {
                            Id = 2,
                            BankAccountId = 1987,
                            CustomerId = 0,
                            EmployeeId = 1,
                            Notes = "One-off",
                            PayeeName = "Art Tech",
                            PaymentDate = new DateTime(2019, 12, 21, 16, 38, 58, 763, DateTimeKind.Local).AddTicks(392),
                            PaymentMethod = 1,
                            Reference = "G43534-324",
                            SupplierId = 0
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.ExpenseLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceType")
                        .HasColumnType("int");

                    b.Property<double>("VAT")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ExpenseLines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 200.0,
                            Description = "Regular",
                            ExpenseId = 1,
                            ServiceType = 1,
                            VAT = 23.0
                        },
                        new
                        {
                            Id = 2,
                            Amount = 200.0,
                            Description = "Regular",
                            ExpenseId = 2,
                            ServiceType = 1,
                            VAT = 23.0
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.Holiday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OnCall")
                        .HasColumnType("bit");

                    b.Property<int>("OnCallRateMultiplier")
                        .HasColumnType("int");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Holidays");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 1,
                            EndDateTime = new DateTime(2019, 12, 26, 16, 38, 58, 759, DateTimeKind.Local).AddTicks(2194),
                            OnCall = true,
                            OnCallRateMultiplier = 2,
                            Paid = true,
                            StartDateTime = new DateTime(2019, 12, 25, 16, 38, 58, 759, DateTimeKind.Local).AddTicks(1579)
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 2,
                            EndDateTime = new DateTime(2019, 12, 26, 16, 38, 58, 759, DateTimeKind.Local).AddTicks(2877),
                            OnCall = true,
                            OnCallRateMultiplier = 2,
                            Paid = true,
                            StartDateTime = new DateTime(2019, 12, 25, 16, 38, 58, 759, DateTimeKind.Local).AddTicks(2857)
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = 11232,
                            CustomerId = 1123,
                            DueDate = new DateTime(2020, 4, 1, 16, 38, 58, 752, DateTimeKind.Local).AddTicks(7108),
                            InvoiceDate = new DateTime(2019, 12, 26, 16, 38, 58, 752, DateTimeKind.Local).AddTicks(7624),
                            Message = "Email invoice."
                        },
                        new
                        {
                            Id = 21324,
                            CustomerId = 2123,
                            DueDate = new DateTime(2020, 4, 1, 16, 38, 58, 752, DateTimeKind.Local).AddTicks(8590),
                            InvoiceDate = new DateTime(2019, 12, 26, 16, 38, 58, 752, DateTimeKind.Local).AddTicks(8611),
                            Message = "Email invoice."
                        },
                        new
                        {
                            Id = 32312,
                            CustomerId = 3123,
                            DueDate = new DateTime(2020, 4, 1, 16, 38, 58, 752, DateTimeKind.Local).AddTicks(8628),
                            InvoiceDate = new DateTime(2019, 12, 26, 16, 38, 58, 752, DateTimeKind.Local).AddTicks(8631),
                            Message = "Email invoice."
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.InvoiceLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("Service")
                        .HasColumnType("int");

                    b.Property<double>("VAT")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceLines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InvoiceId = 11232,
                            Quantity = 232.0,
                            Rate = 24.5,
                            Service = 0,
                            VAT = 0.0
                        },
                        new
                        {
                            Id = 2,
                            InvoiceId = 11232,
                            Quantity = 22.0,
                            Rate = 11.0,
                            Service = 0,
                            VAT = 0.0
                        },
                        new
                        {
                            Id = 3,
                            InvoiceId = 11232,
                            Quantity = 23.0,
                            Rate = 11.0,
                            Service = 0,
                            VAT = 0.0
                        },
                        new
                        {
                            Id = 4,
                            InvoiceId = 11232,
                            Quantity = 122.0,
                            Rate = 223.0,
                            Service = 0,
                            VAT = 0.0
                        },
                        new
                        {
                            Id = 5,
                            InvoiceId = 21324,
                            Quantity = 23.0,
                            Rate = 11.0,
                            Service = 0,
                            VAT = 0.0
                        },
                        new
                        {
                            Id = 6,
                            InvoiceId = 21324,
                            Quantity = 23.0,
                            Rate = 11.0,
                            Service = 0,
                            VAT = 0.0
                        },
                        new
                        {
                            Id = 7,
                            InvoiceId = 21324,
                            Quantity = 23.0,
                            Rate = 11.0,
                            Service = 0,
                            VAT = 0.0
                        },
                        new
                        {
                            Id = 8,
                            InvoiceId = 21324,
                            Quantity = 23.0,
                            Rate = 11.0,
                            Service = 0,
                            VAT = 0.0
                        },
                        new
                        {
                            Id = 9,
                            InvoiceId = 21324,
                            Quantity = 23.0,
                            Rate = 11.0,
                            Service = 0,
                            VAT = 0.0
                        },
                        new
                        {
                            Id = 10,
                            InvoiceId = 32312,
                            Quantity = 23.0,
                            Rate = 11.0,
                            Service = 0,
                            VAT = 0.0
                        },
                        new
                        {
                            Id = 11,
                            InvoiceId = 32312,
                            Quantity = 23.0,
                            Rate = 11.0,
                            Service = 0,
                            VAT = 0.0
                        },
                        new
                        {
                            Id = 12,
                            InvoiceId = 32312,
                            Quantity = 23.0,
                            Rate = 11.0,
                            Service = 0,
                            VAT = 0.0
                        },
                        new
                        {
                            Id = 13,
                            InvoiceId = 32312,
                            Quantity = 23.0,
                            Rate = 11.0,
                            Service = 0,
                            VAT = 0.0
                        },
                        new
                        {
                            Id = 14,
                            InvoiceId = 32312,
                            Quantity = 23.0,
                            Rate = 11.0,
                            Service = 0,
                            VAT = 0.0
                        },
                        new
                        {
                            Id = 15,
                            InvoiceId = 32312,
                            Quantity = 23.0,
                            Rate = 11.0,
                            Service = 0,
                            VAT = 0.0
                        },
                        new
                        {
                            Id = 16,
                            InvoiceId = 32312,
                            Quantity = 23.0,
                            Rate = 11.0,
                            Service = 0,
                            VAT = 0.0
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("NoteText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1123,
                            NoteText = "Customer prefers email rather than phone contact!"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2123,
                            NoteText = "Customer prefers phone rather than email contact!"
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3123,
                            NoteText = "Customer prefers mobile rather than email or landline contact!"
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.Pay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DefaultRate")
                        .HasColumnType("bit");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("HourlyRate")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Pays");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DefaultRate = true,
                            EmployeeId = 1,
                            EndTime = new DateTime(2020, 7, 10, 16, 38, 58, 761, DateTimeKind.Local).AddTicks(6462),
                            HourlyRate = 10.0,
                            StartTime = new DateTime(2019, 12, 23, 16, 38, 58, 761, DateTimeKind.Local).AddTicks(5964)
                        },
                        new
                        {
                            Id = 2,
                            DefaultRate = true,
                            EmployeeId = 2,
                            EndTime = new DateTime(2020, 7, 10, 16, 38, 58, 761, DateTimeKind.Local).AddTicks(6998),
                            HourlyRate = 10.0,
                            StartTime = new DateTime(2019, 12, 23, 16, 38, 58, 761, DateTimeKind.Local).AddTicks(6979)
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AmountReceived")
                        .HasColumnType("float");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountReceived = 200.0,
                            CustomerId = 1123,
                            InvoiceId = 11232,
                            Memo = "Thanks!",
                            PaymentDate = new DateTime(2020, 1, 13, 16, 38, 58, 754, DateTimeKind.Local).AddTicks(5074),
                            PaymentMethod = 1
                        },
                        new
                        {
                            Id = 2,
                            AmountReceived = 200.0,
                            CustomerId = 2123,
                            InvoiceId = 11232,
                            Memo = "Thanks!",
                            PaymentDate = new DateTime(2020, 1, 13, 16, 38, 58, 754, DateTimeKind.Local).AddTicks(6908),
                            PaymentMethod = 1
                        },
                        new
                        {
                            Id = 3,
                            AmountReceived = 200.0,
                            CustomerId = 3123,
                            InvoiceId = 11232,
                            Memo = "Thanks!",
                            PaymentDate = new DateTime(2020, 1, 13, 16, 38, 58, 754, DateTimeKind.Local).AddTicks(6992),
                            PaymentMethod = 1
                        },
                        new
                        {
                            Id = 4,
                            AmountReceived = 200.0,
                            CustomerId = 1123,
                            InvoiceId = 21324,
                            Memo = "Thanks!",
                            PaymentDate = new DateTime(2020, 1, 13, 16, 38, 58, 754, DateTimeKind.Local).AddTicks(6998),
                            PaymentMethod = 1
                        },
                        new
                        {
                            Id = 5,
                            AmountReceived = 200.0,
                            CustomerId = 2123,
                            InvoiceId = 21324,
                            Memo = "Thanks!",
                            PaymentDate = new DateTime(2020, 1, 13, 16, 38, 58, 754, DateTimeKind.Local).AddTicks(7002),
                            PaymentMethod = 1
                        },
                        new
                        {
                            Id = 6,
                            AmountReceived = 200.0,
                            CustomerId = 3123,
                            InvoiceId = 21324,
                            Memo = "Thanks!",
                            PaymentDate = new DateTime(2020, 1, 13, 16, 38, 58, 754, DateTimeKind.Local).AddTicks(7005),
                            PaymentMethod = 1
                        },
                        new
                        {
                            Id = 7,
                            AmountReceived = 200.0,
                            CustomerId = 1123,
                            InvoiceId = 32312,
                            Memo = "Thanks!",
                            PaymentDate = new DateTime(2020, 1, 13, 16, 38, 58, 754, DateTimeKind.Local).AddTicks(7009),
                            PaymentMethod = 1
                        },
                        new
                        {
                            Id = 8,
                            AmountReceived = 200.0,
                            CustomerId = 2123,
                            InvoiceId = 32312,
                            Memo = "Thanks!",
                            PaymentDate = new DateTime(2020, 1, 13, 16, 38, 58, 754, DateTimeKind.Local).AddTicks(7012),
                            PaymentMethod = 1
                        },
                        new
                        {
                            Id = 9,
                            AmountReceived = 200.0,
                            CustomerId = 3123,
                            InvoiceId = 32312,
                            Memo = "Thanks!",
                            PaymentDate = new DateTime(2020, 1, 13, 16, 38, 58, 754, DateTimeKind.Local).AddTicks(7016),
                            PaymentMethod = 1
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.PaymentBilling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<double>("OpeningBalance")
                        .HasColumnType("float");

                    b.Property<int>("PrefferedMethod")
                        .HasColumnType("int");

                    b.Property<string>("Terms")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("PaymentBillings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1123,
                            OpeningBalance = 0.0,
                            PrefferedMethod = 2,
                            Terms = "NA"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2123,
                            OpeningBalance = 0.0,
                            PrefferedMethod = 2,
                            Terms = "NA"
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3123,
                            OpeningBalance = 0.0,
                            PrefferedMethod = 2,
                            Terms = "NA"
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.PaymentDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SortCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1987,
                            AccountNo = "768 43230",
                            SortCode = "5675 234"
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 1987,
                            AccountNo = "567 567",
                            SortCode = "2342 234"
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 1987,
                            AccountNo = "234 546",
                            SortCode = "234265 234"
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.SMS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeliveredDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SendTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SentDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SMSs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeliveredDateTime = new DateTime(2019, 12, 23, 17, 8, 58, 765, DateTimeKind.Local).AddTicks(4484),
                            Message = "Invoice sent!",
                            SendTo = "2342352354324",
                            Sender = "Bob Smith",
                            SentDateTime = new DateTime(2019, 12, 23, 16, 38, 58, 765, DateTimeKind.Local).AddTicks(3974)
                        },
                        new
                        {
                            Id = 2,
                            DeliveredDateTime = new DateTime(2019, 12, 23, 17, 8, 58, 765, DateTimeKind.Local).AddTicks(5454),
                            Message = "Invoice sent!",
                            SendTo = "2342352354324",
                            Sender = "Bill Smith",
                            SentDateTime = new DateTime(2019, 12, 23, 16, 38, 58, 765, DateTimeKind.Local).AddTicks(5434)
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.SalesReceipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SalesReceiptDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SalesReceipts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BankAccountId = 1987,
                            CustomerId = 1123,
                            InvoiceId = 11232,
                            Message = "New customer!",
                            PaymentMethod = 3,
                            ReferenceNo = "2342",
                            SalesReceiptDate = new DateTime(2020, 1, 15, 16, 38, 58, 755, DateTimeKind.Local).AddTicks(5068)
                        },
                        new
                        {
                            Id = 2,
                            BankAccountId = 1987,
                            CustomerId = 2123,
                            InvoiceId = 11232,
                            Message = "New customer!",
                            PaymentMethod = 3,
                            ReferenceNo = "2342",
                            SalesReceiptDate = new DateTime(2020, 1, 15, 16, 38, 58, 755, DateTimeKind.Local).AddTicks(6922)
                        },
                        new
                        {
                            Id = 3,
                            BankAccountId = 1987,
                            CustomerId = 3123,
                            InvoiceId = 11232,
                            Message = "New customer!",
                            PaymentMethod = 3,
                            ReferenceNo = "2342",
                            SalesReceiptDate = new DateTime(2020, 1, 15, 16, 38, 58, 755, DateTimeKind.Local).AddTicks(6962)
                        },
                        new
                        {
                            Id = 4,
                            BankAccountId = 1987,
                            CustomerId = 1123,
                            InvoiceId = 21324,
                            Message = "New customer!",
                            PaymentMethod = 3,
                            ReferenceNo = "2342",
                            SalesReceiptDate = new DateTime(2020, 1, 15, 16, 38, 58, 755, DateTimeKind.Local).AddTicks(6968)
                        },
                        new
                        {
                            Id = 5,
                            BankAccountId = 1987,
                            CustomerId = 2123,
                            InvoiceId = 21324,
                            Message = "New customer!",
                            PaymentMethod = 3,
                            ReferenceNo = "2342",
                            SalesReceiptDate = new DateTime(2020, 1, 15, 16, 38, 58, 755, DateTimeKind.Local).AddTicks(6972)
                        },
                        new
                        {
                            Id = 6,
                            BankAccountId = 1987,
                            CustomerId = 3123,
                            InvoiceId = 21324,
                            Message = "New customer!",
                            PaymentMethod = 3,
                            ReferenceNo = "2342",
                            SalesReceiptDate = new DateTime(2020, 1, 15, 16, 38, 58, 755, DateTimeKind.Local).AddTicks(6976)
                        },
                        new
                        {
                            Id = 7,
                            BankAccountId = 1987,
                            CustomerId = 1123,
                            InvoiceId = 32312,
                            Message = "New customer!",
                            PaymentMethod = 3,
                            ReferenceNo = "2342",
                            SalesReceiptDate = new DateTime(2020, 1, 15, 16, 38, 58, 755, DateTimeKind.Local).AddTicks(6980)
                        },
                        new
                        {
                            Id = 8,
                            BankAccountId = 1987,
                            CustomerId = 2123,
                            InvoiceId = 32312,
                            Message = "New customer!",
                            PaymentMethod = 3,
                            ReferenceNo = "2342",
                            SalesReceiptDate = new DateTime(2020, 1, 15, 16, 38, 58, 755, DateTimeKind.Local).AddTicks(6984)
                        },
                        new
                        {
                            Id = 9,
                            BankAccountId = 1987,
                            CustomerId = 3123,
                            InvoiceId = 32312,
                            Message = "New customer!",
                            PaymentMethod = 3,
                            ReferenceNo = "2342",
                            SalesReceiptDate = new DateTime(2020, 1, 15, 16, 38, 58, 755, DateTimeKind.Local).AddTicks(6987)
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.SalesReceiptLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("SalesReceiptId")
                        .HasColumnType("int");

                    b.Property<int>("Service")
                        .HasColumnType("int");

                    b.Property<double>("VAT")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SalesReceiptId");

                    b.ToTable("SalesReceiptLines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Quantity = 0.0,
                            Rate = 23.0,
                            SalesReceiptId = 1,
                            Service = 0,
                            VAT = 0.0
                        },
                        new
                        {
                            Id = 2,
                            Quantity = 0.0,
                            Rate = 23.0,
                            SalesReceiptId = 2,
                            Service = 0,
                            VAT = 0.0
                        },
                        new
                        {
                            Id = 3,
                            Quantity = 0.0,
                            Rate = 23.0,
                            SalesReceiptId = 3,
                            Service = 0,
                            VAT = 0.0
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductSubscription")
                        .HasColumnType("int");

                    b.Property<DateTime>("StardDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            AccountId = 1987,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductSubscription = 0,
                            StardDate = new DateTime(2020, 4, 1, 16, 38, 58, 756, DateTimeKind.Local).AddTicks(6887)
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 1987,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductSubscription = 2,
                            StardDate = new DateTime(2020, 4, 1, 16, 38, 58, 756, DateTimeKind.Local).AddTicks(7423)
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 1987,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductSubscription = 3,
                            StardDate = new DateTime(2020, 4, 1, 16, 38, 58, 756, DateTimeKind.Local).AddTicks(7443)
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 1987,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductSubscription = 1,
                            StardDate = new DateTime(2020, 4, 1, 16, 38, 58, 756, DateTimeKind.Local).AddTicks(7448)
                        },
                        new
                        {
                            Id = 6,
                            AccountId = 1987,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductSubscription = 4,
                            StardDate = new DateTime(2020, 4, 1, 16, 38, 58, 756, DateTimeKind.Local).AddTicks(7451)
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1987,
                            Company = "Berrari-Ltd",
                            ContactName = "Mr Enzo Berrari",
                            Email = "Enzo@Berrari.com",
                            Fax = "2342342",
                            Mobile = "1232432",
                            Phone = "324232",
                            Website = "http://www.berrariltd.com"
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 1987,
                            Company = "Renotton-Ltd",
                            ContactName = "Mr Malavio Fritorie",
                            Email = "Malavio.Fritorie@Renotton.com",
                            Fax = "2242342",
                            Mobile = "4432432",
                            Phone = "334232",
                            Website = "www.Renotton-ltd.com"
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.SupplierNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NoteText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SupplierNotes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NoteText = "No weekend deliveries!",
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 2,
                            NoteText = "No weekend deliveries!",
                            SupplierId = 2
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.TaxInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("TaxRegNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UTRNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("TaxInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1123,
                            TaxRegNo = "2341",
                            UTRNo = "23423"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2123,
                            TaxRegNo = "2341",
                            UTRNo = "23423"
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3123,
                            TaxRegNo = "2341",
                            UTRNo = "23423"
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.TaxInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VAT")
                        .HasColumnType("bit");

                    b.Property<string>("VATRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaxInformations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 1,
                            TaxCode = "DFE543R323E",
                            VAT = true,
                            VATRef = "VD-3R32342E"
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 2,
                            TaxCode = "DFE543R323E",
                            VAT = true,
                            VATRef = "VD-3R32342E"
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Certification")
                        .HasColumnType("bit");

                    b.Property<string>("CertificationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Trainings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Certification = true,
                            CertificationName = "MCP",
                            Description = "SQL Server MCP",
                            EmployeeId = 1,
                            EndDateTime = new DateTime(2020, 4, 1, 16, 38, 58, 760, DateTimeKind.Local).AddTicks(6134),
                            Name = "SQL MCP Training",
                            StartDateTime = new DateTime(2019, 9, 14, 16, 38, 58, 760, DateTimeKind.Local).AddTicks(5640)
                        },
                        new
                        {
                            Id = 2,
                            Certification = true,
                            CertificationName = "MCP",
                            Description = "SQL Server MCP",
                            EmployeeId = 2,
                            EndDateTime = new DateTime(2020, 4, 1, 16, 38, 58, 760, DateTimeKind.Local).AddTicks(6686),
                            Name = "SQL MCP Training",
                            StartDateTime = new DateTime(2019, 9, 14, 16, 38, 58, 760, DateTimeKind.Local).AddTicks(6666)
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.Voucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AppliedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("CreditAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductVoucher")
                        .HasColumnType("int");

                    b.Property<string>("VoucherCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vouchers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1987,
                            AppliedDate = new DateTime(2019, 12, 23, 16, 38, 58, 757, DateTimeKind.Local).AddTicks(1869),
                            CreditAmount = 0.0,
                            ExpireDate = new DateTime(2020, 4, 1, 16, 38, 58, 757, DateTimeKind.Local).AddTicks(2383),
                            ProductVoucher = 0,
                            VoucherCode = "dsf3234"
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 1987,
                            AppliedDate = new DateTime(2019, 12, 23, 16, 38, 58, 757, DateTimeKind.Local).AddTicks(3786),
                            CreditAmount = 0.0,
                            ExpireDate = new DateTime(2020, 1, 15, 16, 38, 58, 757, DateTimeKind.Local).AddTicks(3808),
                            ProductVoucher = 3,
                            VoucherCode = "dsf3234"
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 1987,
                            AppliedDate = new DateTime(2019, 12, 23, 16, 38, 58, 757, DateTimeKind.Local).AddTicks(3842),
                            CreditAmount = 0.0,
                            ExpireDate = new DateTime(2020, 1, 15, 16, 38, 58, 757, DateTimeKind.Local).AddTicks(3845),
                            ProductVoucher = 4,
                            VoucherCode = "dsf3234"
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.WebhookPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PostDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WebhookPosts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Invoice sent!",
                            PostDateTime = new DateTime(2019, 12, 23, 16, 38, 58, 766, DateTimeKind.Local).AddTicks(5190),
                            Sender = "Bob Smith",
                            URL = "Invoice Sent!"
                        },
                        new
                        {
                            Id = 2,
                            Body = "Invoice sent!",
                            PostDateTime = new DateTime(2019, 12, 23, 16, 38, 58, 766, DateTimeKind.Local).AddTicks(6681),
                            Sender = "Bob Smith",
                            URL = "Invoice Sent!"
                        });
                });

            modelBuilder.Entity("AccountsManager_Domain.Invoice", b =>
                {
                    b.HasOne("AccountsManager_Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AccountsManager_Domain.InvoiceLine", b =>
                {
                    b.HasOne("AccountsManager_Domain.Invoice", "Invoice")
                        .WithMany("InvoiceLines")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AccountsManager_Domain.PaymentBilling", b =>
                {
                    b.HasOne("AccountsManager_Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AccountsManager_Domain.SalesReceiptLine", b =>
                {
                    b.HasOne("AccountsManager_Domain.SalesReceipt", "SalesReceipt")
                        .WithMany()
                        .HasForeignKey("SalesReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AccountsManager_Domain.TaxInfo", b =>
                {
                    b.HasOne("AccountsManager_Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
